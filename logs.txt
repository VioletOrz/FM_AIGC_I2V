24.10.24 v2.0.0
重构代码，更改了目录结构，代码不再必须放置到指定文件夹中。需要逐步运行的代码封装到函数或者类中。现在可以通过yaml直接修改各项参数，生成图包可以通过launch.py文件一键生成。加入了控制背景和生成透明背景图包的功能。

24.10.25 v2.1.0
1.修复Bug:生成加入了生成透明背景功能后，差分图出现了马赛克，推测是由于差分图没有读取四通道rgba图像，只读取了rgb三通道导致的。
去除了差分部分将差异较大的像素强制设置为不透明的代码，bug已解决。
2.加入pipeline控制 透明背景控制 和 图包名称控制
透明背景控制 必须为 “True" 或者 ”False“的字符串，优先级高于yaml中设定的参数，如果输入其他值则会使用yaml中设定的参数 
图包名称控制 启用并且接收到输入后优先级高于yaml中的设定的参数
Pipeline控制使用说明
P 生成预览视频 这个必须在第一步
I 生成基础图包 这个必须在第一步或者在 P 之后 
i 占位符 代表已经执行过 I 生成了图包 不会执行 I 的代码 给后面的步骤提供输入 主要用于程序意外中断后 可以从 I 之后继续运行 必须在第一步
D 去朦胧算法 这一步必须在I/i之后 
d 占位符 代表已经执行过 D 生成了图包 不会执行 D 的代码 给后面的步骤提供输入 主要用于程序意外中断后 可以从 D 之后继续运行 必须在第一步
S 生成超分图包 这一步必须在I/i D/d之后
s 占位符 代表已经执行过 S 生成了图包 不会执行 S 的代码 给后面的步骤提供输入 主要用于程序意外中断后 可以从 s 之后继续运行 必须在第一步
R 生成降采样一半分辨率的图包 这一步必须在 S/s 后
r 占位符 代表已经执行过 S 生成了图包 不会执行 S 的代码 给后面的步骤提供输入 主要用于程序意外中断后 可以从 s 之后继续运行 必须在第一步
F 生成差分图包 这一步必须在 I/i D/i S/s R/r 后 生成他们对应的差分图包，可以不是最后一步 如果插入在某两步中间 那么他的下一步会使用他上一步的输出路径作为输入路径

加入输入路径 arg改成能接收unknow的 调用sd的步骤优化一下

24.10.28
优化了arg参数传递
添加了从命令行获取输入路径的功能 
添加了从命令行获取替换背景路径的功能 
在is_trans和alternate_background模式下不再调用sdwebui的接口
修复了一个背景尺寸异常Bug

24.10.29 v2.2.0
添加了预处理pose和从本地读取pose参数的功能
添加了从命令行获取pose相关参数的功能 
优化了多线程处理过程
合并了部分冗余代码
更新了从string获取pipeline的功能 现在可以使用 p 来添加预处理emotion video的过程 p必须位于顶部
合并了一个预览网页，修改animationHandler.js 第267行的路径，打开animationHandler.html 即可播放视频 点击视频加载talking说话口型

v2.2.1
修复了pipeline from string中无法通过已生成的文件直接生成差分图的Bug
在F的可识别前置字符中加入了i d s r


v2.2.2
修复了is_trans模式和alternate_background模式下错误读取缓存background的bug
删除了部分冗余代码
修复了进程池中概率性发生创建已存在目录报错的bug

24.10.31 v2.2.3
移除了animtionhandler，这个文件夹将会被上传到单独的分支
重命名了modules/Img_pack_6T.py 改为 Gen_img_pack
重命名了launch.py中的Img_pack_6T函数 改为 Gen_img_pack
优化了一个emotion_from_tensor模式下添加了多余进程的bug,实际上多添加了6个进程
这个函数目前会以7线程运行 a i o 各两线程 b 一线程

24.11.04
优化了生成差分图包的文件读取逻辑，解决部分图包被差分两次的bug
加入了工具目录tools和一些工具
加入了将图片名从img_001格式改为img_1格式的脚本


v2.2.4
24.11.05
修复了一个输出路径错误的问题,这个错误会导致在工作路径外创建一个临时文件夹
加入了一个裁切图像上下两边的脚本
加入了一个可以复制指定名称的子文件夹下的所有文件到另一文件夹，并保留其父目录的结构

v2.2.5
24.11.08
加入了一个分割视频的脚本 用来分割长的motion视频来增加Motion素材
我所用过的所有pose_tensor也会上传到github仓库中作为公开素材，不再只上传一个样例，但只上传一个emotion视频作为样例以减少空间占用
目前的默认目录结构
FM_AIGC_I2V
    --config 
        sitting.yaml            配置文件
    --data
        --ani-pic               存放图像的位置
        --background            存放sd重绘的临时背景图和替换背景图的位置
        --background_output     存放音频和预览视频的位置
        --cropped_dir           存放裁切图、分割后的前、背景图等临时文件的位置
        --emotion               存放emotion视频的位置，动捕后用于生成视频
        --mask_output           存放mask临时文件的位置
        --pose                  存放动捕后emtion数据的位置
    --lib                       一些库函数
    --modules                   功能模块代码
    --tools                     工具代码
    launch.py                   运行时启动的代码
    logs.txt                    一些更新日志
    requirements.txt            环境配置
后续上传的代码会以 ani-pic 图161.png作为样例上传，data文件夹中的临时文件是161生成过程中产生的临时文件，而不再是随机的